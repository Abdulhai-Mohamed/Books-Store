
@using Microsoft.AspNetCore.Identity
@model IEnumerable<IdentityRole>


@{
    ViewBag.Title = "Roles list";
}
    <h2 class="text-center my-5">All Roles:-</h2>
<div class="d-flex flex-wrap  justify-content-center">


    @*
        In ASP.NET Core, Model is a property of the Razor Page or View that provides access to the
        model object that is being used to render the page. The Model property is of type object, 
        which means it can hold any type of data.
        The Any() method, on the other hand, is a LINQ extension method that is used to determine 
        whether a model (such as a list or array) contains any elements. The Any() method returns 
        a boolean value (true or false) based on whether the sequence contains any elements or not.
        When you call Model.Any() in an ASP.NET Core view or Razor Page, it checks whether the model
        object contains any elements or not. This is often used to check whether a list or collection 
        has any items, and to conditionally render content in the view based on that.
    *@
    @if (Model.Any())
    {
        <div class="col-12 text-center">
            <a asp-controller="Administration" asp-action="CreateRole" class="ms-md-3 my-2 btn btn-secondary">Add new role</a>

        </div>

        @foreach (var role in Model)
        {
            <div class="col-lg-4   col-md-6  col-12  ">
                <div class="card  m-md-4 m-sm-4   ">
                    <div class="   card-header  row justify-content-center  ">
                        <h5>Role ID:- @role.Id</h5>
                        
                    </div>

                    <div class="card-body text-md-start text-sm-center ">
                        <h5 class="card-title">@role.Name</h5>

                    </div>
                    <div class="card-footer">



                        <form class="notStyled" method="post" asp-controller="Administration" asp-action="DeleteRole" asp-route-id="@role.Id">
                            <a asp-controller="Administration"   asp-action="EditRole" asp-route-id="@role.Id" class=" prevent-scroll ms-md-3 my-2 btn btn-secondary">Edit</a>



                            @*CHECK IF LOGGED USER HAS DeleteRoleOrUserPolicy *@
                            @if ((await authorizationService.AuthorizeAsync(User, "DeleteRoleOrUserPolicy")).Succeeded)
                            {
                           
                            <span id="confirmDeleteSpan_@role.Id" style="display:none">
                                <span>Are you sure you want to delete?</span>
                                <button type="submit" class="btn btn-danger">Yes</button>
                                <a href="#" class="btn btn-primary" onclick="confirmDelete('@role.Id', false)">No</a>
                            </span>

                            <span id="deleteSpan_@role.Id">
                                    <a href="#" class="btn btn-danger prevent-scroll" onclick="confirmDelete('@role.Id', true)">Delete</a>
                            </span>
                            }

                        </form>

                    </div>

                </div>
            </div>

        }

    }
    else{
        <div class="col-lg-4   col-md-6  col-12  ">
            <div class="card  m-md-4 m-sm-4   ">
                <div class="   card-header  row justify-content-center  ">
                    <h5>
                        No roles created yet
                    </h5>

                </div>

                <div class="card-body text-md-start text-sm-center ">
                    <h5 class="card-title">
                        Use the button below to create a role
                    </h5>

                </div>
                <div class="card-footer">

                    <a asp-controller="Administration" asp-action="CreateRole" class="ms-md-3 my-2 btn btn-secondary">Create a role</a>
                </div>
            </div>
        </div>

    }

</div>

